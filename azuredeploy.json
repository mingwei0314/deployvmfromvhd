{
    "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "transferVmName": {
            "defaultValue": "TransferVM",
            "minLength": 3,
            "maxLength": 15,
            "type": "String",
            "metadata": {
                "description": "Name of the Windows VM that will perform the copy of the VHD from a source storage account to the new storage account created in the new deployment, this is known as transfer vm."
            }
        },
        "vmSize": {
            "defaultValue": "Standard_A3",
            "type": "String",
            "metadata": {
                "description": "VM size of new virtual machine that will be deployed from a custom image."
            }
        },
        "newVmName": {
            "defaultValue": "sample",
            "minLength": 3,
            "maxLength": 15,
            "type": "String",
            "metadata": {
                "description": "Name of the new VM deployed from the custom image."
            }
        },
        "adminUserName": {
            "minLength": 1,
            "type": "String",
            "metadata": {
                "description": "Name of the local administrator account, this cannot be Admin, Administrator or root."
            },
			"defaultValue": "advantech"
        },
        "adminPassword": {
            "minLength": 8,
            "type": "SecureString",
            "metadata": {
                "description": "Local administrator password, complex password is required, do not use any variation of the password word because it will be rejected."
            },
			"defaultValue": "P@ssw0rd123456"
        },
        "sourceStorageAccountResourceGroup": {
            "type": "String",
            "metadata": {
                "description": "Resource group name of the source storage account."
            },
			"defaultValue": "WISE-PaaS_Marketplace_Deploy_VM_Template"
        },
        "sourceImageURI": {
            "type": "String",
            "metadata": {
                "description": "Full URIs for one or more custom images (VHDs) that should be copied to the deployment storage account to spin up new VMs from them. URLs must be comma separated."
            },
			"defaultValue": ""
        },
        "SourceSAKey": {
            "type": "String",
            "metadata": {
                "description": "SourceSAKey - Source storage account Key"
            },
			"defaultValue": ""
        },
        "customImageName": {
            "type": "String",
            "metadata": {
                "description": "Name of the VHD to be used as source syspreped/generalized image to deploy the VM. E.g. mybaseimage.vhd."
            },
			"defaultValue": ""
        }
    },
    "variables": {
		"vmNsgName": "sampleNsg",
        "sourceStorageAccountName": "[substring(split(parameters('sourceImageURI'),'.')[0],8)]",
        "vmCount": 2,
        "vmNames": [
            "[parameters('transferVmName')]",
            "[parameters('newVmName')]"
        ],
        "nicNames": [
            "[concat(parameters('transferVmName'),'Nic')]",
            "[concat(parameters('newVmName'),'Nic')]"
        ],
        "storageAccountType": "Standard_LRS",
        "storageAccountName": "[concat(parameters('newVmName'), uniquestring(resourceGroup().id))]",
        "virtualNetworkName": "[concat(parameters('newVmName'),'vNet')]",
        "vnetPrefix": "10.0.0.0/16",
        "vnetSubnetName1": "LabSubnet",
        "vnetSubnetPrefix1": "10.0.0.0/24",
        "VnetID": "[resourceId('Microsoft.Network/virtualNetworks', variables('VirtualNetworkName'))]",
        "SubnetRef": "[concat(variables('VnetID'), '/subnets/', variables('vnetSubnetName1'))]",
        "projectName": "201-vm-customimage-new-storageaccount",
        "publicIpNames": [
            "[concat(parameters('transferVmName'),'PublicIP')]",
            "[concat(parameters('newVmName'),'PublicIP')]"
        ],
        "windowsOSVersion": "2012-R2-Datacenter",
        "imagePublisher": "MicrosoftWindowsServer",
        "imageOffer": "WindowsServer",
        "osDiskName": "OSDisk",
        "transferVmSize": "Standard_D1",
        "vhdStorageAccountContainerName": "vhds",
        "sourcevhdStorageAccountContainerName": "vhds/Microsoft.Compute/Images/vhds",
        "customScriptFolder": "CustomScripts",
        "trfCustomScriptFiles": [
            "ImageTransfer.ps1"
        ]
    },
    "resources": [
		{
		  "apiVersion": "2015-05-01-preview",
		  "type": "Microsoft.Network/networkSecurityGroups",
		  "name": "[variables('vmNsgName')]",
		  "location": "[resourceGroup().location]",
		  "properties": {
			"securityRules": [
                    {
                        "name": "FTP",
                        "properties": {
                            "protocol": "TCP",
                            "sourcePortRange": "*",
                            "destinationPortRange": "2121",
                            "sourceAddressPrefix": "*",
                            "destinationAddressPrefix": "*",
                            "access": "Allow",
                            "priority": 1010,
                            "direction": "Inbound"
                        }
                    },
                    {
                        "name": "FTP_passive",
                        "properties": {
                            "protocol": "TCP",
                            "sourcePortRange": "*",
                            "destinationPortRange": "5010",
                            "sourceAddressPrefix": "*",
                            "destinationAddressPrefix": "*",
                            "access": "Allow",
                            "priority": 1020,
                            "direction": "Inbound"
                        }
                    },
                    {
                        "name": "MQTT",
                        "properties": {
                            "protocol": "TCP",
                            "sourcePortRange": "*",
                            "destinationPortRange": "1883",
                            "sourceAddressPrefix": "*",
                            "destinationAddressPrefix": "*",
                            "access": "Allow",
                            "priority": 1030,
                            "direction": "Inbound"
                        }
                    },
                    {
                        "name": "repeater_server",
                        "properties": {
                            "protocol": "TCP",
                            "sourcePortRange": "*",
                            "destinationPortRange": "5501",
                            "sourceAddressPrefix": "*",
                            "destinationAddressPrefix": "*",
                            "access": "Allow",
                            "priority": 1040,
                            "direction": "Inbound"
                        }
                    },
                    {
                        "name": "repeater_viewer",
                        "properties": {
                            "protocol": "TCP",
                            "sourcePortRange": "*",
                            "destinationPortRange": "5901",
                            "sourceAddressPrefix": "*",
                            "destinationAddressPrefix": "*",
                            "access": "Allow",
                            "priority": 1050,
                            "direction": "Inbound"
                        }
                    },
                    {
                        "name": "Http",
                        "properties": {
                            "protocol": "TCP",
                            "sourcePortRange": "*",
                            "destinationPortRange": "80",
                            "sourceAddressPrefix": "*",
                            "destinationAddressPrefix": "*",
                            "access": "Allow",
                            "priority": 1060,
                            "direction": "Inbound"
                        }
                    },
                    {
                        "name": "SymmetricDS",
                        "properties": {
                            "protocol": "TCP",
                            "sourcePortRange": "*",
                            "destinationPortRange": "31415",
                            "sourceAddressPrefix": "*",
                            "destinationAddressPrefix": "*",
                            "access": "Allow",
                            "priority": 1070,
                            "direction": "Inbound"
                        }
                    },
                    {
                        "name": "MongoDB",
                        "properties": {
                            "protocol": "TCP",
                            "sourcePortRange": "*",
                            "destinationPortRange": "27017",
                            "sourceAddressPrefix": "*",
                            "destinationAddressPrefix": "*",
                            "access": "Allow",
                            "priority": 1080,
                            "direction": "Inbound"
                        }
                    },
                    {
                        "name": "websockeify",
                        "properties": {
                            "protocol": "TCP",
                            "sourcePortRange": "*",
                            "destinationPortRange": "6080",
                            "sourceAddressPrefix": "*",
                            "destinationAddressPrefix": "*",
                            "access": "Allow",
                            "priority": 1090,
                            "direction": "Inbound"
                        }
                    },
                    {
                        "name": "MongoDB_Arb1",
                        "properties": {
                            "protocol": "TCP",
                            "sourcePortRange": "*",
                            "destinationPortRange": "27018",
                            "sourceAddressPrefix": "*",
                            "destinationAddressPrefix": "*",
                            "access": "Allow",
                            "priority": 1100,
                            "direction": "Inbound"
                        }
                    },
                    {
                        "name": "default-allow-rdp",
                        "properties": {
                            "protocol": "TCP",
                            "sourcePortRange": "*",
                            "destinationPortRange": "3389",
                            "sourceAddressPrefix": "*",
                            "destinationAddressPrefix": "*",
                            "access": "Allow",
                            "priority": 1110,
                            "direction": "Inbound"
                        }
                    },
                    {
                        "name": "MQTT_30",
                        "properties": {
                            "protocol": "TCP",
                            "sourcePortRange": "*",
                            "destinationPortRange": "10001",
                            "sourceAddressPrefix": "*",
                            "destinationAddressPrefix": "*",
                            "access": "Allow",
                            "priority": 1120,
                            "direction": "Inbound"
                        }
                    }
                ]
		  }
		},
        {
            "type": "Microsoft.Storage/storageAccounts",
            "name": "[variables('StorageAccountName')]",
            "apiVersion": "2015-06-15",
            "location": "[resourceGroup().location]",
            "tags": {
                "displayName": "StorageAccount"
            },
            "properties": {
                "accountType": "[variables('StorageAccountType')]"
            },
            "dependsOn": []
        },
        {
            "type": "Microsoft.Network/virtualNetworks",
            "name": "[variables('VirtualNetworkName')]",
            "apiVersion": "2015-06-15",
            "location": "[resourceGroup().location]",
            "tags": {
                "displayName": "vnet"
            },
            "properties": {
                "addressSpace": {
                    "addressPrefixes": [
                        "[variables('vnetPrefix')]"
                    ]
                },
                "subnets": [
                    {
                        "name": "[variables('vnetSubnetName1')]",
                        "properties": {
                            "addressPrefix": "[variables('vnetSubnetPrefix1')]"
                        }
                    }
                ]
            }
        },
        {
            "type": "Microsoft.Network/publicIPAddresses",
            "name": "[variables('publicIpNames')[copyIndex()]]",
            "apiVersion": "2015-06-15",
            "location": "[resourceGroup().location]",
            "copy": {
                "name": "pipCopy",
                "count": "[variables('vmCount')]"
            },
            "tags": {
                "displayName": "[concat(variables('publicIpNames')[copyIndex()],' Public IP')]"
            },
            "properties": {
                "publicIPAllocationMethod": "Static"
            },
            "dependsOn": []
        },
        {
            "type": "Microsoft.Network/networkInterfaces",
            "name": "[variables('nicNames')[copyIndex()]]",
            "apiVersion": "2015-06-15",
            "location": "[resourceGroup().location]",
            "copy": {
                "name": "nicCopy",
                "count": "[variables('vmCount')]"
            },
            "tags": {
                "displayName": "[concat(variables('VMNames')[copyIndex()], ' Network Interface')]"
            },
            "properties": {
                "ipConfigurations": [
                    {
                        "name": "ipconfig1",
                        "properties": {
                            "privateIPAllocationMethod": "Dynamic",
                            "subnet": {
                                "id": "[variables('SubnetRef')]"
                            },
                            "publicIPAddress": {
                                "id": "[resourceId('Microsoft.Network/publicIPAddresses',variables('publicIpNames')[copyIndex()])]"
                            }
                        }
                    }
                ],
                "networkSecurityGroup": {
                    "id": "[resourceId('Microsoft.Network/networkSecurityGroups', variables('vmNsgName'))]"
                }
			},
            "dependsOn": [
                "[concat('Microsoft.Network/virtualNetworks/', variables('VirtualNetworkName'))]",
                "pipCopy"
            ]
        },
        {
            "type": "Microsoft.Compute/virtualMachines",
            "name": "[variables('vmNames')[0]]",
            "apiVersion": "2015-06-15",
            "location": "[resourceGroup().location]",
            "tags": {
                "displayName": "[variables('vmNames')[0]]"
            },
            "properties": {
                "hardwareProfile": {
                    "vmSize": "[variables('transferVmSize')]"
                },
                "osProfile": {
                    "computerName": "[variables('vmNames')[0]]",
                    "adminUsername": "[parameters('AdminUsername')]",
                    "adminPassword": "[parameters('adminPassword')]"
                },
                "storageProfile": {
                    "imageReference": {
                        "publisher": "[variables('imagePublisher')]",
                        "offer": "[variables('imageOffer')]",
                        "sku": "[variables('windowsOSVersion')]",
                        "version": "latest"
                    },
                    "osDisk": {
                        "name": "[concat(variables('vmNames')[0],'-osdisk')]",
                        "vhd": {
                            "uri": "[concat('http://', variables('storageAccountName'), '.blob.core.windows.net/', variables('vhdStorageAccountContainerName'), '/',variables('vmNames')[0],'-osdisk' , '.vhd')]"
                        },
                        "caching": "ReadWrite",
                        "createOption": "FromImage"
                    }
                },
                "networkProfile": {
                    "networkInterfaces": [
                        {
                            "id": "[resourceId('Microsoft.Network/networkInterfaces', concat(variables('nicNames')[0]))]"
                        }
                    ]
                }
            },
            "resources": [
                {
                    "type": "extensions",
                    "name": "[concat(variables('VMNames')[0],'CustomScriptExtension')]",
                    "apiVersion": "2015-06-15",
                    "location": "[resourceGroup().location]",
                    "properties": {
                        "publisher": "Microsoft.Compute",
                        "type": "CustomScriptExtension",
                        "autoUpgradeMinorVersion": true,
                        "typeHandlerVersion": "1.4",
                        "settings": {
                            "fileUris": [
                                "https://marketplacetemplate.blob.core.windows.net/rmm32-3-2-13/ImageTransfer.ps1"
                            ]
                        },
                        "protectedSettings": {
                            "commandToExecute": "[concat('powershell -ExecutionPolicy Unrestricted -File ','ImageTransfer.ps1 -SourceImage ',parameters('sourceImageURI'),' -SourceSAKey ', parameters('SourceSAKey'), ' -DestinationURI https://', variables('StorageAccountName'), '.blob.core.windows.net/vhds', ' -DestinationSAKey ', listKeys(concat('Microsoft.Storage/storageAccounts/', variables('StorageAccountName')), '2015-06-15').key1)]"
                        }
                    },
                    "dependsOn": [
                        "[concat('Microsoft.Compute/virtualMachines/', variables('vmNames')[0])]"
                    ]
                }
            ],
            "dependsOn": [
                "[concat('Microsoft.Storage/storageAccounts/', variables('storageAccountName'))]",
                "[concat('Microsoft.Network/networkInterfaces/', variables('vmNames')[0],'NIC')]"
            ]
        },
        {
            "type": "Microsoft.Compute/virtualMachines",
            "name": "[variables('vmNames')[1]]",
            "apiVersion": "2015-06-15",
            "location": "[resourceGroup().location]",
            "tags": {
                "displayName": "[variables('VMNames')[1]]"
            },
            "properties": {
                "hardwareProfile": {
                    "vmSize": "[parameters('vmSize')]"
                },
                "osProfile": {
                    "computerName": "[variables('VMNames')[1]]",
                    "adminUsername": "[parameters('AdminUsername')]",
                    "adminPassword": "[parameters('adminPassword')]"
                },
                "storageProfile": {
                    "osDisk": {
                        "name": "[concat(variables('vmNames')[1],'-osdisk')]",
                        "osType": "windows",
                        "createOption": "FromImage",
                        "caching": "ReadWrite",
                        "image": {
                            "uri": "[concat('http://', variables('StorageAccountName'), '.blob.core.windows.net/',variables('sourcevhdStorageAccountContainerName'),'/',parameters('customImageName'))]"
                        },
                        "vhd": {
                            "uri": "[concat('http://', variables('StorageAccountName'), '.blob.core.windows.net/',variables('vhdStorageAccountContainerName'),'/',variables('VMNames')[1],'-osdisk.vhd')]"
                        }
                    }
                },
                "networkProfile": {
                    "networkInterfaces": [
                        {
                            "id": "[resourceId('Microsoft.Network/networkInterfaces', concat(variables('nicNames')[1]))]"
                        }
                    ]
                }
            },
            "dependsOn": [
                "[concat('Microsoft.Storage/storageAccounts/', variables('StorageAccountName'))]",
                "[concat('Microsoft.Network/networkInterfaces/', variables('vmNames')[1],'NIC')]",
                "[concat('Microsoft.Compute/virtualMachines/', variables('VMNames')[0],'/extensions/',variables('VMNames')[0],'CustomScriptExtension')]"
            ]
        }
    ],
    "outputs": {}
}